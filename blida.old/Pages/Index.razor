@page "/"
@inject Microsoft.Extensions.Caching.Distributed.IDistributedCache Cache

<button class="btn btn-primary" @onclick="Load">Load</button>

@if (Trends is null)
{
    <em>Loading...</em>
}
else
{
    foreach (var t in Trends)
    {
        <div class="row">
            <div class="col">
                @t.Key
            </div>
            <div class="col">
                @t.Value.Count
            </div>
        </div>
    }
}

<div class="row">
    <div class="col">
        <em class="text-danger">@Error</em>
    </div>
</div>

@code {
    Dictionary<int, List<Trend>> Trends { get; set; }
    string Error { get; set; }
    protected async Task Load()
    {
        try
        {
            Trends = await Cache.GetRecordAsync<Dictionary<int, List<Trend>>>("Trend");
        }
        catch (Exception ex)
        {
            Error = ex.Message;
        }
    }
}